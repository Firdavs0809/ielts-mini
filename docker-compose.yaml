version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: core-backend:latest
    container_name: backend
    volumes:
      - ./backend:/app
      - ./.git:/app/.git
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=change-me-in-prod
      - DJANGO_DEBUG=True
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - POSTGRES_DB=ielts_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - web
      - default

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
    container_name: frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - web
      - default

  postgres:
    image: 'postgres:17-alpine'
    container_name: postgres
    mem_limit: 1g
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ielts_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ielts_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - default

volumes:
  postgres_data:
    driver: local
  static_volume:

networks:
  web:
    driver: bridge